/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "stdafx.h"


#include "cmnProgramParms.h"
#include "acmCommSeqThread.h"

namespace ACM
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************

void CommSeqThread::executeAcquire()
{
   // Print and log.
   Prn::print(Prn::View11, "");
   Prn::print(0, "acquiring**********************************");
   Prn::print(Prn::View11, "acquiring**********************************");

   // Initialize variables.
   mLoopExitCode = 0;

   // Open the script file.
   mReadCount = 0;

   try
   {
      // Loop through the script file.
      while (true)
      {
         mReadCount++;

         // Test for a notification exception.
         mNotify.testException();

         Prn::print(Prn::View11, "acquire %d", mReadCount);

         // Delay.
         mNotify.waitForTimer(Cmn::gProgramParms.mDelay);

      }
   }
   catch (int aException)
   {
      mLoopExitCode = cLoopExitAborted;
      Prn::print(0, "EXCEPTION CommSeqThread::executeAcquire %d %s", aException, mNotify.mException);
   }
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace